{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributeForm from \"../../components/ContributeForm\";\nimport { Link } from '../../routes';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          approversCount = _this$props.approversCount,\n          requestsCount = _this$props.requestsCount;\n      var items = [{\n        header: manager,\n        meta: 'Address of Manager',\n        description: 'The manager created this campaign and can create requests to withdraw money.',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei)',\n        description: 'You must contribute at least this much wei to become an approver.'\n      }, {\n        header: requestsCount,\n        meta: 'Number of Requests',\n        description: 'A request tries to withdraw money from the contract. Request must be approved by approvers.'\n      }, {\n        header: approversCount,\n        meta: 'Number of Approvers',\n        description: 'Number of people who have already donated to this campaign.'\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign Balance (ether)',\n        description: 'The balance is how much money this campaign has left to spend.'\n      }];\n      return /*#__PURE__*/_jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Campaign Show\"\n        }), /*#__PURE__*/_jsxs(Grid, {\n          children: [/*#__PURE__*/_jsxs(Grid.Column, {\n            width: 10,\n            children: [this.renderCards(), /*#__PURE__*/_jsx(Link, {\n              route: \"/campaigns/\".concat(this.props.address, \"/requests\"),\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: /*#__PURE__*/_jsx(Button, {\n                  primary: true,\n                  children: \"View Requests\"\n                })\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Grid.Column, {\n            width: 6,\n            children: /*#__PURE__*/_jsx(ContributeForm, {\n              address: this.props.address\n            })\n          })]\n        })]\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["E:/Research Work/Addones/Course/task/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","ContributeForm","Link","CampaignShow","props","balance","manager","minimumContribution","approversCount","requestsCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Grid, Button } from 'semantic-ui-react';\r\nimport Layout from '../../components/Layout';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\nimport ContributeForm from \"../../components/ContributeForm\";\r\nimport { Link } from '../../routes';\r\n\r\nclass CampaignShow extends Component {\r\n  static async getInitialProps(props) {\r\n    const campaign = Campaign(props.query.address);\r\n\r\n    const summary = await campaign.methods.getSummary().call();\r\n\r\n    return {\r\n      address: props.query.address,\r\n      minimumContribution: summary[0],\r\n      balance: summary[1],\r\n      requestsCount: summary[2],\r\n      approversCount: summary[3],\r\n      manager: summary[4]\r\n    };\r\n\r\n  }\r\n\r\n  renderCards() {\r\n    const {\r\n      balance,\r\n      manager,\r\n      minimumContribution,\r\n      approversCount,\r\n      requestsCount\r\n    } = this.props;\r\n\r\n    const items = [\r\n      {\r\n        header: manager,\r\n        meta: 'Address of Manager',\r\n        description: 'The manager created this campaign and can create requests to withdraw money.',\r\n        style: { overflowWrap: 'break-word' }\r\n      },\r\n      {\r\n        header: minimumContribution,\r\n        meta: 'Minimum Contribution (wei)',\r\n        description: 'You must contribute at least this much wei to become an approver.'\r\n      },\r\n      {\r\n        header: requestsCount,\r\n        meta: 'Number of Requests',\r\n        description: 'A request tries to withdraw money from the contract. Request must be approved by approvers.'\r\n      },\r\n      {\r\n        header: approversCount,\r\n        meta: 'Number of Approvers',\r\n        description: 'Number of people who have already donated to this campaign.'\r\n      },\r\n      {\r\n        header: web3.utils.fromWei(balance, 'ether'),\r\n        meta: 'Campaign Balance (ether)',\r\n        description: 'The balance is how much money this campaign has left to spend.'\r\n      }\r\n\r\n    ];\r\n\r\n    return <Card.Group items={items} />;\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <h3>Campaign Show</h3>\r\n        <Grid>\r\n\r\n          <Grid.Column width={10}>\r\n            {this.renderCards()}\r\n            <Link route={`/campaigns/${this.props.address}/requests`}>\r\n              <a>\r\n                <Button primary>View Requests</Button>\r\n              </a>\r\n            </Link>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column width={6}>\r\n            <ContributeForm address={this.props.address} />\r\n          </Grid.Column>\r\n\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CampaignShow;\r\n"]},"metadata":{},"sourceType":"module"}